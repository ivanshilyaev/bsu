package com.ivanshilyaev.rsa.service;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;

import java.math.BigInteger;

import static org.junit.jupiter.api.Assertions.assertEquals;

public class RsaImplTest {

    private RsaImpl rsaImpl;

    @BeforeEach
    public void setUp() {
        rsaImpl = new RsaImpl();
    }

    @Test
    @DisplayName("Encryption")
    public void encryptionTest() {
        BigInteger e = new BigInteger("65537");
        BigInteger n = new BigInteger("74464268619852061021852824597802040422303636067203510905060502530005928752952595437679699037165527112128848121430230272234851595286069506466532498947561064152867798026420436947508374780378112783489438938442071519647806383731533731293576508310331448244934683467323960468773608943951301816336663722381859552537");
        BigInteger x = new BigInteger("123");
        BigInteger y = rsaImpl.encrypt(n, e, x);
        BigInteger expectedY = new BigInteger("15124704331725303558615131629651967709618293638160007690163995423586563451872652885012383125857378310163249149040201905296101845629078729890002865135316716103649376119273690991105255214525578159571858634731667884625977234823332423822713644964377415036519751461140122433607401098206669701267756109593082940027");
        System.out.println("Expected y: " + expectedY);
        System.out.println("         y: " + y);
        assertEquals(expectedY, y);
    }

    @Test
    @DisplayName("Decryption")
    public void decryptionTest() {
        BigInteger d = new BigInteger("54521383794247541818112025090033582703880860837157032985631448096530730598141970063888495938147730571669481012356830486796608843856173539646254206967037197533283581930989175772941652253357224960780916837194347067391286150707111158545973079793722534645416427169234869615277820139637595759017172700252860934773");
        BigInteger n = new BigInteger("74464268619852061021852824597802040422303636067203510905060502530005928752952595437679699037165527112128848121430230272234851595286069506466532498947561064152867798026420436947508374780378112783489438938442071519647806383731533731293576508310331448244934683467323960468773608943951301816336663722381859552537");
        BigInteger y = new BigInteger("15124704331725303558615131629651967709618293638160007690163995423586563451872652885012383125857378310163249149040201905296101845629078729890002865135316716103649376119273690991105255214525578159571858634731667884625977234823332423822713644964377415036519751461140122433607401098206669701267756109593082940027");
        BigInteger x = rsaImpl.decrypt(n, d, y);
        BigInteger expectedX = new BigInteger("123");
        System.out.println("Expected x: " + expectedX);
        System.out.println("         x: " + x);
        assertEquals(expectedX, x);
    }
}
